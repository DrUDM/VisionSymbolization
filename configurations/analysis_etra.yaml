
data: 
    subject_set: ['009', '019', '022', '058', '059', '060', '062', 'SMC']  #['009', '019', '022', '058', '059', '060', '062', 'SMC']  
    task_set: ['FreeViewing'] 
    condition_set: [ 'Puzzle', 'Natural', 'Blank', 'Waldo'] #['Puzzle', 'Natural', 'Blank', 'Waldo']
    
    oculomotor_features: [
'startTime(s)', 'fixFreq', 'fixVel', 'fixDriftDisplacement', 'fixDriftDist', 'fixDriftVel', 'fixBCEA', #'  
'sacFreq', 'sacAmp',   'sacEfficiency',  
'sacPeakVel' , 'sacPeakAcc', 'sacSkewnessExponent', 'sacPeakVelAmpRatio'   
              ]
     
    scanpath_features: [
'startTime(s)', 'SpLength', 'SpBCEA' , 'SpConvexHull', 'SpFractalDimension', #'SpVoronoi', 'SpKCoefficient', 
'SpRQARecRate', 'SpRQADet', 'SpRQALam', 
              ]
              
    aoi_features: [
'startTime(s)', 'AoINumber',  
'AoIBCEA', 'AoIBCEADisp', 
'AoILempelZiv',  
#'AoIStationaryEntropy', 'AoIJointEntropy',
#'AoIConditionalEntropy' ,  'AoIMutualInformation' #
              ]

general: 
    oculomotor_partition_length: 5
    scanpath_partition_length: 20
    aoi_partition_length: 20
    
    oculomotor_nb_segments: 100
    scanpath_nb_segments: 50
    aoi_nb_segments: 50
    
    sampling_frequency: 500
    segmentation_method: I_VT
    distance_type: euclidean 
    
    size_plan_x: !!float 1000
    size_plan_y: !!float 700 
    
symbolization: 
    normalization: all
    normalization_method: empirical
    binning: True
    
    segmentation:
        oculomotor:
            nb_breakpoints: 9 #9 
        scanpath:
            nb_breakpoints: 9 #9 
        aoi:
            nb_breakpoints: 9 #9 
            
    nb_clusters:
        oculomotor: 20 #25
        scanpath: 20
        aoi: 20
        
    gmcm: 
        master_stepsize: !!float 1e-2 #.5e-3  
        nb_steps: 150
        distance: wasserstein
        
clustering: 
    edit_distance:
        deletion_cost: !!float 1
        insertion_cost: !!float 1
        normalization: max
    
    method: svm
    
ADAM:
    beta_1: !!float .95
    beta_2: !!float .95
     
    
 
    
    
    
    
   
    
    
    
    
    
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    