
data: 
    subject_set: ['009', '019', '022', '058', '059', '060', '062', 'SMC']  #['009', '019', '022', '058', '059', '060', '062', 'SMC']  
    task_set: ['FreeViewing'] 
    condition_set: ['Puzzle', 'Natural', 'Waldo', 'Blank'] #['Puzzle', 'Natural', 'Blank', 'Waldo']
    
    oculomotor_features: [
'startTime(s)', 'fixFreq', 'fixVel', 'fixDriftDisplacement', 'fixDriftDist', 'fixDriftVel', 'fixBCEA', #'  
'sacFreq', 'sacAmp',   'sacEfficiency',   'sacSuccessiveDev', 'sacMaxCurvature', 'sacPeakVel' ,'sacSkewnessExponent', 'sacPeakVelAmpRatio'   
              ]
     
    scanpath_features: [
'startTime(s)',  'SpBCEA' , 'SpConvexHull', 'SpFractalDimension', 'SpKCoefficient','SpVoronoi', #'
'SpRQARecRate', #'SpRQADet', 'SpRQALam', 
              ]
              
    aoi_features: [
'startTime(s)', 'AoINumber',  
'AoIBCEA',   'AoIBCEAVar', 
'AoILempelZiv',  
'AoIStationaryEntropy', 'AoIJointEntropy', 'AoIConditionalEntropy' ,  'AoIMutualInformation' #
              ]

general: 
    oculomotor_partition_length: 5
    scanpath_partition_length: 10
    aoi_partition_length: 30
    
    oculomotor_nb_segments: 100
    scanpath_nb_segments: 50
    aoi_nb_segments: 50
    
    sampling_frequency: 500
    segmentation_method: I_VT
    distance_type: euclidean 
    
    size_plan_x: !!float 1000
    size_plan_y: !!float 700 
    
symbolization: 
    normalization: all
    normalization_method: empirical
    binning: False
    
    segmentation:
        oculomotor:
            nb_breakpoints: 4 #9
            penalization: !!float .5
        scanpath:
            nb_breakpoints: 4 #9
            penalization: !!float .5
        aoi:
            nb_breakpoints: 4 #9
            penalization: !!float .5
            
    nb_clusters:
        oculomotor: 12 #25
        scanpath: 12
        aoi: 12
        
clustering: 
    edit_distance:
        deletion_cost: !!float 1
        insertion_cost: !!float 1
        normalization: max
    
    method: distance_embedding
    
        
    
 
    
    
    
    
   
    
    
    
    
   
    
    
    
    
    
    
    
    
    
    
    
    
    